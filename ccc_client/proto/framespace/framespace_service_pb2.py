# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/framespace/framespace_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.framespace import framespace_pb2 as proto_dot_framespace_dot_framespace__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/framespace/framespace_service.proto',
  package='framespace',
  syntax='proto3',
  serialized_pb=_b('\n)proto/framespace/framespace_service.proto\x12\nframespace\x1a!proto/framespace/framespace.proto\x1a\x1cgoogle/api/annotations.proto\"\x19\n\x08NameList\x12\r\n\x05names\x18\x01 \x03(\t\"\x1f\n\x0f\x41xisSearchQuery\x12\x0c\n\x04name\x18\x01 \x03(\t2\xdb\x01\n\x11\x46rameSpaceService\x12]\n\x0cGetAxisTypes\x12\x14.framespace.NameList\x1a\x14.framespace.NameList\"!\x82\xd3\xe4\x93\x02\x1b\"\x16/v1/frame/GetAxisTypes:\x01*\x12g\n\nSearchAxis\x12\x1b.framespace.AxisSearchQuery\x1a\x1b.framespace.AxisSearchQuery\"\x1f\x82\xd3\xe4\x93\x02\x19\"\x14/v1/frame/SearchAxis:\x01*b\x06proto3')
  ,
  dependencies=[proto_dot_framespace_dot_framespace__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_NAMELIST = _descriptor.Descriptor(
  name='NameList',
  full_name='framespace.NameList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='names', full_name='framespace.NameList.names', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=122,
  serialized_end=147,
)


_AXISSEARCHQUERY = _descriptor.Descriptor(
  name='AxisSearchQuery',
  full_name='framespace.AxisSearchQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='framespace.AxisSearchQuery.name', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=149,
  serialized_end=180,
)

DESCRIPTOR.message_types_by_name['NameList'] = _NAMELIST
DESCRIPTOR.message_types_by_name['AxisSearchQuery'] = _AXISSEARCHQUERY

NameList = _reflection.GeneratedProtocolMessageType('NameList', (_message.Message,), dict(
  DESCRIPTOR = _NAMELIST,
  __module__ = 'proto.framespace.framespace_service_pb2'
  # @@protoc_insertion_point(class_scope:framespace.NameList)
  ))
_sym_db.RegisterMessage(NameList)

AxisSearchQuery = _reflection.GeneratedProtocolMessageType('AxisSearchQuery', (_message.Message,), dict(
  DESCRIPTOR = _AXISSEARCHQUERY,
  __module__ = 'proto.framespace.framespace_service_pb2'
  # @@protoc_insertion_point(class_scope:framespace.AxisSearchQuery)
  ))
_sym_db.RegisterMessage(AxisSearchQuery)


import abc
from grpc.beta import implementations as beta_implementations
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

class BetaFrameSpaceServiceServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def GetAxisTypes(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SearchAxis(self, request, context):
    raise NotImplementedError()

class BetaFrameSpaceServiceStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def GetAxisTypes(self, request, timeout):
    raise NotImplementedError()
  GetAxisTypes.future = None
  @abc.abstractmethod
  def SearchAxis(self, request, timeout):
    raise NotImplementedError()
  SearchAxis.future = None

def beta_create_FrameSpaceService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import proto.framespace.framespace_service_pb2
  import proto.framespace.framespace_service_pb2
  import proto.framespace.framespace_service_pb2
  import proto.framespace.framespace_service_pb2
  request_deserializers = {
    ('framespace.FrameSpaceService', 'GetAxisTypes'): proto.framespace.framespace_service_pb2.NameList.FromString,
    ('framespace.FrameSpaceService', 'SearchAxis'): proto.framespace.framespace_service_pb2.AxisSearchQuery.FromString,
  }
  response_serializers = {
    ('framespace.FrameSpaceService', 'GetAxisTypes'): proto.framespace.framespace_service_pb2.NameList.SerializeToString,
    ('framespace.FrameSpaceService', 'SearchAxis'): proto.framespace.framespace_service_pb2.AxisSearchQuery.SerializeToString,
  }
  method_implementations = {
    ('framespace.FrameSpaceService', 'GetAxisTypes'): face_utilities.unary_unary_inline(servicer.GetAxisTypes),
    ('framespace.FrameSpaceService', 'SearchAxis'): face_utilities.unary_unary_inline(servicer.SearchAxis),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_FrameSpaceService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import proto.framespace.framespace_service_pb2
  import proto.framespace.framespace_service_pb2
  import proto.framespace.framespace_service_pb2
  import proto.framespace.framespace_service_pb2
  request_serializers = {
    ('framespace.FrameSpaceService', 'GetAxisTypes'): proto.framespace.framespace_service_pb2.NameList.SerializeToString,
    ('framespace.FrameSpaceService', 'SearchAxis'): proto.framespace.framespace_service_pb2.AxisSearchQuery.SerializeToString,
  }
  response_deserializers = {
    ('framespace.FrameSpaceService', 'GetAxisTypes'): proto.framespace.framespace_service_pb2.NameList.FromString,
    ('framespace.FrameSpaceService', 'SearchAxis'): proto.framespace.framespace_service_pb2.AxisSearchQuery.FromString,
  }
  cardinalities = {
    'GetAxisTypes': cardinality.Cardinality.UNARY_UNARY,
    'SearchAxis': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'framespace.FrameSpaceService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
