syntax = "proto3";

package framespace;
import "proto/framespace/framespace.proto";

service FrameSpaceService {

  // Gets a list of available axes 
  rpc SearchAxes(SearchAxesRequest) returns (SearchAxesResponse);

  // Gets a list of available KeySpaces for an axis
  rpc SearchKeySpaces(SearchKeySpacesRequest) returns (SearchKeySpacesResponse);

  // Gets a list of available Units of measurement 
  rpc SearchUnits(SearchUnitsRequest) returns (SearchUnitsResponse);

  // Get a list of DataFrames
  rpc SearchDataFrames(SearchDataFramesRequest) returns (SearchDataFramesResponse);

  // Subset a DataFrame
  rpc SliceDataFrame(SliceDataFrameRequest) returns (DataFrame);

}

/* POST /axes/search 
search by name
*/
message SearchAxesRequest {
  repeated string names = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message SearchAxesResponse {
  repeated Axis axes = 1;
  string next_page_token = 2;
}

/* POST /keyspaces/search 
search by name, axis, and keys
restrictive get by id 
*/
message SearchKeySpacesRequest {
  repeated string keyspace_ids = 1;
  repeated string names = 2;
  repeated string axis_names = 3;
  repeated string keys = 4;
  int32 page_size = 5;
  string page_token = 6;
}

message SearchKeySpacesResponse {
  repeated KeySpace keyspaces = 1;
  string next_page_token = 2;
}

/* POST /units/search
search for available units of measurement
available in FrameSpace
*/ 
message SearchUnitsRequest {
  repeated int32 names = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message SearchUnitsResponse {
  repeated Unit units = 1;
  string next_page_token = 2;
}

/* POST /dataframes/search 
search for DataFrames associated with the following keyspaces
search for DataFrames associated with the following units of measurement
*/
message SearchDataFramesRequest {
  repeated string dataframe_ids = 1;
  repeated int32 keyspace_ids = 2;
  repeated Unit units = 3;
  int32 page_size = 4;
  string page_token = 5;
}

message SearchDataFramesResponse {
  repeated DataFrame dataframes = 1;
  string next_page_token = 2;
}

/* POST /dataframe/slice 
Given an id return a slice based on the following dimensions
Client creates a list of keys as a new dimension.
*/
message SliceDataFrameRequest {
  string dataframe_id = 1;
  Dimension new_major = 2;
  Dimension new_minor = 3;
}